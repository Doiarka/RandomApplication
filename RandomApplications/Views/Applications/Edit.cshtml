@using RandomApplications.Models
@model RandomApplications.Request.EditApplicationRequest

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Изменение статуса заявки</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-md-12">
        <h4>
            Заявка №@Html.DisplayFor(model => model.Id) - Статус: @Html.DisplayFor(model => model.StatusOld)
        </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <label class="control-label col-md-2">Название</label>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Описание</label>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", style = "height: 200px;" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        @{
            if (Model.StatusOld != Status.Close)
            {
                <div class="form-group">
                    <label class="control-label col-md-2 col-lg-2">Комментарий</label>
                    <div class="col-sm-12 col-md-10 col-lg-10">
                        @Html.TextArea("comment", Model.Comment, new { htmlAttributes = new { @style = "height:200px;width: 100%;" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        }


        @{
            string value = String.Empty;
            if (Model.StatusOld != Status.Close)
            {
                if (Model.StatusOld == Status.Open || Model.StatusOld == Status.Return)
                {
                    value = "Решена";
                }
                else
                {
                    value = "Вернуть";
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" name="answer" value="Закрыть" class="btn btn-default"/>
                        </div>
                    </div>
                }
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" name="answer" value=@value class="btn btn-default" />
                    </div>
                </div>
            }
        }
    </div>
}
<h2>История изменений</h2>

<table class="table">
    @foreach (var history in Model.Histories)
    {
        <tr>
            <td class="control-label col-md-2">
                @history.DateModify
            </td>
            <td class="control-label col-md-2">
                @history.StatusNew
            </td>
            <td class="control-label col-md-2">
                @history.Comment
            </td>
        </tr>
    }
</table>

<div>
    @Html.ActionLink("Вернуться к списку заявок", "List")
</div>
